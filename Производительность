*** ОПТИМИЗАЦИЯ КЛИЕНТ-СЕРВЕРНОГО ВЗАИМОДЕЙСТВИЯ В ФОРМАХ ***

ЗАДАЧА: - Сложные расчеты производить на сервере;
        - Сократить количество серверных вызовов с клиента;
        - Контролировать объем передаваемых данных между клиентом и сервером (трафик);
        - Следить за читаймостью кода для простой поддержки его в дальнейшем.
        
Категории серверных вызовов: 
        - Вызовы, которые платформа делает сама в результате интерактивных действий пользователя (нельзя повлиять);
        - Вызовы, которые платформа делает сама, но при выполнении определенных методов или свойств программного кода (можно повлиять используя другие методы и свойства или
          изменить алгоритм);
        - Серверные вызовы, которые делает разработчик в явном виде в коде.

Инструменты, используемые для оптимизации клиент-серверного взаимодействия:
        - Показатели производительности;
                Показатели производительности системы отображаются в информационной панели, расположенной в нижней части основного окна приложения.
                Они дают информацию о количестве текущих и накопленных вызовов сервера, длительности вызовов сервера, объеме принятых и отправленных данных.
                        Текущие вызовы – это вызовы сервера с момента последнего действия пользователя.
                        Накопленные вызовы – это вызовы сервера с момента запуска приложения или с момента обнуления накопленных показателей.
                        Принято – это объем данных, принятых клиентом от сервера. 
                        Отправлено – это объем данных, отправленных с клиента на сервер.
        - Режим низкой скорости соединения;
        - Режим имитации задержек при вызове сервера;
        - Отображение серверных вызовов в замерах производительности;
        - Проверка серверных вызовов в обработчиках событий.
