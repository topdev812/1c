*** ОПТИМИЗАЦИЯ КЛИЕНТ-СЕРВЕРНОГО ВЗАИМОДЕЙСТВИЯ В ФОРМАХ ***

ЗАДАЧА: - Сложные расчеты производить на сервере;
        - Сократить количество серверных вызовов с клиента;
        - Контролировать объем передаваемых данных между клиентом и сервером (трафик);
        - Следить за читаймостью кода для простой поддержки его в дальнейшем.
        
Категории серверных вызовов: 
        - Вызовы, которые платформа делает сама в результате интерактивных действий пользователя (нельзя повлиять);
        - Вызовы, которые платформа делает сама, но при выполнении определенных методов или свойств программного кода (можно повлиять используя другие методы и свойства или
          изменить алгоритм);
        - Серверные вызовы, которые делает разработчик в явном виде в коде.

Инструменты, используемые для оптимизации клиент-серверного взаимодействия:
        - Показатели производительности;
                Показатели производительности системы отображаются в информационной панели, расположенной в нижней части основного окна приложения.
                Они дают информацию о количестве текущих и накопленных вызовов сервера, длительности вызовов сервера, объеме принятых и отправленных данных.
                        Текущие вызовы – это вызовы сервера с момента последнего действия пользователя.
                        Накопленные вызовы – это вызовы сервера с момента запуска приложения или с момента обнуления накопленных показателей.
                        Принято – это объем данных, принятых клиентом от сервера. 
                        Отправлено – это объем данных, отправленных с клиента на сервер.
        - Режим низкой скорости соединения (визуальный способ оценки);
                Режим низкой скорости соединения – это способ работы клиентского приложения, позволяющий ему функционировать на медленных каналах связи как можно эффективнее.
                При запуске в этом режиме платформа автоматически предпринимает шаги по оптимизации взаимодействия с сервером. Заметим, что установка низкой скорости соединения
                имеет смысл только для тонкого клиента и веб-клиента, так как толстый клиент не умеет работать через Интернет.
                Задать низкую скорость соединения можно в списке ИБ, в свойствах ИБ, в конфигураторе.
        - Режим имитации задержек при вызове сервера;
                При включении этого режима платформа (даже в файловом варианте на локальном компьютере) будет работать с теми временными задержками, с которыми работает реальный
                канал связи.
                Этот режим не нужно путать с режимом низкой скорости соединения.
                Режим низкой скорости соединения – это, скорее, инструмент пользователя. Пользователь устанавливает этот режим, чтобы приложение на медленных каналах связи
                работало как можно быстрее. Данный режим задается при запуске клиентского приложения и не может быть изменен в процессе его работы. Режим имитации задержек
                при вызове сервера – это инструмент разработчика, позволяющий ему превратить быстрый канал связи в медленный. Причем сделать это можно как при запуске
                приложения, так и в процессе его работы. При этом режим, в котором было запущено клиентское приложение, не изменится.
                Заметим, что включить режим имитации задержек при вызове сервера можно только для тонкого клиента и толстого клиента, запущенного в режиме управляемого 
                приложения.
        - Отображение серверных вызовов в замерах производительности;
        - Проверка серверных вызовов в обработчиках событий.
